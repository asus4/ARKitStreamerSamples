#pragma kernel TransferData

uint VertexCount;
float4x4 Transform;
float FrameRate;

StructuredBuffer<float> PositionBuffer;
StructuredBuffer<float> NormalBuffer;

RWTexture2D<float4> PositionMap;
RWTexture2D<float4> NormalMap;

// Hash function from H. Schechter & R. Bridson, goo.gl/RXiKaH
uint Hash(uint s)
{
    s ^= 2747636419u;
    s *= 2654435769u;
    s ^= s >> 16;
    s *= 2654435769u;
    s ^= s >> 16;
    s *= 2654435769u;
    return s;
}

[numthreads(8, 8, 1)]
void TransferData(uint2 id : SV_DispatchThreadID)
{
    uint i = Hash(id.x + id.y * 65536) % VertexCount;

    float3 p1 = float3(
        PositionBuffer[i * 3],
        PositionBuffer[i * 3 + 1],
        PositionBuffer[i * 3 + 2]
    );
  
    float3 n1 = float3(
        NormalBuffer[i * 3],
        NormalBuffer[i * 3 + 1],
        NormalBuffer[i * 3 + 2]
    );

    p1 = mul(   Transform, float4(p1, 1)).xyz;
    n1 = mul(   Transform, float4(n1, 0)).xyz;

    PositionMap[id] = float4(p1, 1);
    NormalMap[id] = float4(n1, 0);
}
